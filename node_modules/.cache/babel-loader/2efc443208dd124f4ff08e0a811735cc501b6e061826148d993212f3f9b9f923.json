{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gargs\\\\OneDrive\\\\Desktop\\\\texteditor-2\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import \"./App.css\";\n// import TextVibeAbout from \"./components/About\";\n// import Form from \"./components/Form\";\n// import Navbar from \"./components/Navbar\";\n// import React, { useState } from \"react\";\n// import Alert from \"./components/Alert\";\n// import Login from \"./components/Login\";\n\n// function App() {\n//   const [mode, setMode] = useState(\"light\");\n//   const [alert, setAlert] = useState(null);\n//   const showAlert = (message, type) => {\n//     setAlert({\n//       msg: message,\n//       type: type,\n//     });\n//     setTimeout(() => {\n//       setAlert(null);\n//     }, 3000);\n//   };\n\n//   const togglemode = () => {\n//     if (mode === \"light\") {\n//       setMode(\"dark\");\n//       document.body.style.backgroundColor = \"black\";\n//       showAlert(\"Dark mode has been Enabled\", \"success\");\n//     } else {\n//       setMode(\"light\");\n//       document.body.style.backgroundColor = \"white\";\n//       showAlert(\"light mode has been Enabled\", \"success\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <Navbar\n//         title=\"Text Editor\"\n//         about=\"About Text Editor\"\n//         mode={mode}\n//         togglemode={togglemode}\n//       />\n//       <Alert alert={alert} />\n\n//       <div className=\"container\">\n//         <Form\n//           heading=\"Text Editor : Enter Text to Analyze below\"\n//           mode={mode}\n//           showAlert={showAlert}\n//         />\n//         <TextVibeAbout mode={mode} />\n//         <Login mode={mode} />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport \"./App.css\";\nimport TextVibeAbout from \"./components/About\";\nimport Form from \"./components/Form\";\nimport Navbar from \"./components/Navbar\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport Login from \"./components/Login\";\n// import { Switch } from 'react-router-dom';\n\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n  const togglemode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n      showAlert(\"Dark mode has been Enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been Enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"Text Editor\",\n        about: \"About Text Editor\",\n        mode: mode,\n        togglemode: togglemode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            heading: \"Text Editor : Enter Text to Analyze below\",\n            mode: mode,\n            showAlert: showAlert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          children: /*#__PURE__*/_jsxDEV(TextVibeAbout, {\n            mode: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            mode: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"0HOcw1k7gBoZtgDKz+uDOLkRLtw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TextVibeAbout","Form","Navbar","React","useState","Alert","Login","BrowserRouter","Router","Route","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","togglemode","document","body","style","backgroundColor","children","title","about","fileName","_jsxFileName","lineNumber","columnNumber","className","path","heading","_c","$RefreshReg$"],"sources":["C:/Users/gargs/OneDrive/Desktop/texteditor-2/my-react-app/src/App.js"],"sourcesContent":["// import \"./App.css\";\n// import TextVibeAbout from \"./components/About\";\n// import Form from \"./components/Form\";\n// import Navbar from \"./components/Navbar\";\n// import React, { useState } from \"react\";\n// import Alert from \"./components/Alert\";\n// import Login from \"./components/Login\";\n\n// function App() {\n//   const [mode, setMode] = useState(\"light\");\n//   const [alert, setAlert] = useState(null);\n//   const showAlert = (message, type) => {\n//     setAlert({\n//       msg: message,\n//       type: type,\n//     });\n//     setTimeout(() => {\n//       setAlert(null);\n//     }, 3000);\n//   };\n\n//   const togglemode = () => {\n//     if (mode === \"light\") {\n//       setMode(\"dark\");\n//       document.body.style.backgroundColor = \"black\";\n//       showAlert(\"Dark mode has been Enabled\", \"success\");\n//     } else {\n//       setMode(\"light\");\n//       document.body.style.backgroundColor = \"white\";\n//       showAlert(\"light mode has been Enabled\", \"success\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <Navbar\n//         title=\"Text Editor\"\n//         about=\"About Text Editor\"\n//         mode={mode}\n//         togglemode={togglemode}\n//       />\n//       <Alert alert={alert} />\n\n//       <div className=\"container\">\n//         <Form\n//           heading=\"Text Editor : Enter Text to Analyze below\"\n//           mode={mode}\n//           showAlert={showAlert}\n//         />\n//         <TextVibeAbout mode={mode} />\n//         <Login mode={mode} />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport \"./App.css\";\nimport TextVibeAbout from \"./components/About\";\nimport Form from \"./components/Form\";\nimport Navbar from \"./components/Navbar\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport Login from \"./components/Login\";\n// import { Switch } from 'react-router-dom';\n\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n\n  const togglemode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n      showAlert(\"Dark mode has been Enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been Enabled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n    <Router>\n      <Navbar\n        title=\"Text Editor\"\n        about=\"About Text Editor\"\n        mode={mode}\n        togglemode={togglemode}\n      />\n\n      <Alert alert={alert} />\n      <div className=\"container\">\n        \n          <Route path=\"/\">\n            <Form\n              heading=\"Text Editor : Enter Text to Analyze below\"\n              mode={mode}\n              showAlert={showAlert}\n            />\n          </Route>\n\n          <Route path=\"/about\">\n            <TextVibeAbout mode={mode} />\n          </Route>\n\n          <Route path=\"/login\">\n            <Login mode={mode} />\n          </Route>\n       \n      </div>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}