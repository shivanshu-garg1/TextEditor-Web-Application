{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gargs\\\\OneDrive\\\\Desktop\\\\texteditor-2\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import \"./App.css\";\n// import TextVibeAbout from \"./components/About\";\n// import Form from \"./components/Form\";\n// import Navbar from \"./components/Navbar\";\n// import React, { useState } from \"react\";\n// import Alert from \"./components/Alert\";\n// import Login from \"./components/Login\";\n\n// function App() {\n//   const [mode, setMode] = useState(\"light\");\n//   const [alert, setAlert] = useState(null);\n//   const showAlert = (message, type) => {\n//     setAlert({\n//       msg: message,\n//       type: type,\n//     });\n//     setTimeout(() => {\n//       setAlert(null);\n//     }, 3000);\n//   };\n\n//   const togglemode = () => {\n//     if (mode === \"light\") {\n//       setMode(\"dark\");\n//       document.body.style.backgroundColor = \"black\";\n//       showAlert(\"Dark mode has been Enabled\", \"success\");\n//     } else {\n//       setMode(\"light\");\n//       document.body.style.backgroundColor = \"white\";\n//       showAlert(\"light mode has been Enabled\", \"success\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <Navbar\n//         title=\"Text Editor\"\n//         about=\"About Text Editor\"\n//         mode={mode}\n//         togglemode={togglemode}\n//       />\n//       <Alert alert={alert} />\n\n//       <div className=\"container\">\n//         <Form\n//           heading=\"Text Editor : Enter Text to Analyze below\"\n//           mode={mode}\n//           showAlert={showAlert}\n//         />\n//         <TextVibeAbout mode={mode} />\n//         <Login mode={mode} />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'; // Updated import\n\nimport TextVibeAbout from './components/About';\nimport Form from './components/Form';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport Login from './components/Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n  const toggleMode = () => {\n    const newMode = mode === 'light' ? 'dark' : 'light';\n    setMode(newMode);\n    document.body.style.backgroundColor = newMode === 'dark' ? 'black' : 'white';\n    showAlert(`${newMode} mode has been enabled`, 'success');\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Text Editor\",\n      about: \"About Text Editor\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(TextVibeAbout, {\n            mode: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            mode: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/form\",\n          element: /*#__PURE__*/_jsxDEV(Form, {\n            heading: \"Text Editor: Enter Text to Analyze Below\",\n            mode: mode,\n            showAlert: showAlert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","TextVibeAbout","Form","Navbar","Alert","Login","jsxDEV","_jsxDEV","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","newMode","document","body","style","backgroundColor","children","title","about","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","heading","_c","$RefreshReg$"],"sources":["C:/Users/gargs/OneDrive/Desktop/texteditor-2/my-react-app/src/App.js"],"sourcesContent":["// import \"./App.css\";\n// import TextVibeAbout from \"./components/About\";\n// import Form from \"./components/Form\";\n// import Navbar from \"./components/Navbar\";\n// import React, { useState } from \"react\";\n// import Alert from \"./components/Alert\";\n// import Login from \"./components/Login\";\n\n// function App() {\n//   const [mode, setMode] = useState(\"light\");\n//   const [alert, setAlert] = useState(null);\n//   const showAlert = (message, type) => {\n//     setAlert({\n//       msg: message,\n//       type: type,\n//     });\n//     setTimeout(() => {\n//       setAlert(null);\n//     }, 3000);\n//   };\n\n//   const togglemode = () => {\n//     if (mode === \"light\") {\n//       setMode(\"dark\");\n//       document.body.style.backgroundColor = \"black\";\n//       showAlert(\"Dark mode has been Enabled\", \"success\");\n//     } else {\n//       setMode(\"light\");\n//       document.body.style.backgroundColor = \"white\";\n//       showAlert(\"light mode has been Enabled\", \"success\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <Navbar\n//         title=\"Text Editor\"\n//         about=\"About Text Editor\"\n//         mode={mode}\n//         togglemode={togglemode}\n//       />\n//       <Alert alert={alert} />\n\n//       <div className=\"container\">\n//         <Form\n//           heading=\"Text Editor : Enter Text to Analyze below\"\n//           mode={mode}\n//           showAlert={showAlert}\n//         />\n//         <TextVibeAbout mode={mode} />\n//         <Login mode={mode} />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'; // Updated import\n\nimport TextVibeAbout from './components/About';\nimport Form from './components/Form';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport Login from './components/Login';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n\n  const toggleMode = () => {\n    const newMode = mode === 'light' ? 'dark' : 'light';\n    setMode(newMode);\n    document.body.style.backgroundColor = newMode === 'dark' ? 'black' : 'white';\n    showAlert(`${newMode} mode has been enabled`, 'success');\n  };\n\n  return (\n    <Router>\n      <Navbar\n        title=\"Text Editor\"\n        about=\"About Text Editor\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      <div className=\"container\">\n        <Routes> {/* Wrap your Route components in a Routes element */}\n          <Route path=\"/about\" element={<TextVibeAbout mode={mode} />} />\n          <Route path=\"/login\" element={<Login mode={mode} />} />\n          <Route path=\"/form\" element={<Form heading=\"Text Editor: Enter Text to Analyze Below\" mode={mode} showAlert={showAlert} />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}