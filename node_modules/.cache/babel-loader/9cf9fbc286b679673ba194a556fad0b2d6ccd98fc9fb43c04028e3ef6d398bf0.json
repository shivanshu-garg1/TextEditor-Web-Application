{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gargs\\\\OneDrive\\\\Desktop\\\\texteditor-2\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport TextVibeAbout from \"./components/About\";\nimport Form from \"./components/Form\";\nimport Navbar from \"./components/Navbar\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport Login from \"./components/Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n  const togglemode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n      showAlert(\"Dark mode has been Enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been Enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Text Editor\",\n      about: \"About Text Editor\",\n      mode: mode,\n      togglemode: togglemode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        heading: \"Text Editor : Enter Text to Analyze below\",\n        mode: mode,\n        showAlert: showAlert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextVibeAbout, {\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Login, {\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0HOcw1k7gBoZtgDKz+uDOLkRLtw=\");\n_c = App;\nexport default App;\n\n// import \"./App.css\";\n// import TextVibeAbout from \"./components/About\";\n// import Form from \"./components/Form\";\n// import Navbar from \"./components/Navbar\";\n// import React, { useState } from \"react\";\n// import Alert from \"./components/Alert\";\n// import Login from \"./components/Login\";\n// // import { Switch } from 'react-router-dom';\n\n// import{\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n// function App() {\n//   const [mode, setMode] = useState(\"light\");\n//   const [alert, setAlert] = useState(null);\n//   const showAlert = (message, type) => {\n//     setAlert({\n//       msg: message,\n//       type: type,\n//     });\n//     setTimeout(() => {\n//       setAlert(null);\n//     }, 3000);\n//   };\n\n//   const togglemode = () => {\n//     if (mode === \"light\") {\n//       setMode(\"dark\");\n//       document.body.style.backgroundColor = \"black\";\n//       showAlert(\"Dark mode has been Enabled\", \"success\");\n//     } else {\n//       setMode(\"light\");\n//       document.body.style.backgroundColor = \"white\";\n//       showAlert(\"light mode has been Enabled\", \"success\");\n//     }\n//   };\n\n//   return (\n//    <Router>\n// <Navbar\n//         title=\"Text Editor\"\n//         about=\"About Text Editor\"\n//         mode={mode}\n//         togglemode={togglemode}\n//       />\n\n// <Alert alert={alert} />\n\n// <Switch>\n//   <Route path=\"/\">\n//   <Form\n//           heading=\"Text Editor : Enter Text to Analyze below\"\n//           mode={mode}\n//           showAlert={showAlert}\n//         />\n//   </Route>\n\n//   <Route path=\"/about\">\n//   <TextVibeAbout mode={mode} />\n//   </Route>\n\n//   <Route path=\"/login\">\n//   <Login mode={mode} />\n//   </Route>\n\n// </Switch>\n//    </Router>\n//   );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TextVibeAbout","Form","Navbar","React","useState","Alert","Login","jsxDEV","_jsxDEV","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","togglemode","document","body","style","backgroundColor","children","title","about","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["C:/Users/gargs/OneDrive/Desktop/texteditor-2/my-react-app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport TextVibeAbout from \"./components/About\";\nimport Form from \"./components/Form\";\nimport Navbar from \"./components/Navbar\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport Login from \"./components/Login\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n\n  const togglemode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n      showAlert(\"Dark mode has been Enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been Enabled\", \"success\");\n    }\n  };\n\n  return (\n    <div>\n      <Navbar\n        title=\"Text Editor\"\n        about=\"About Text Editor\"\n        mode={mode}\n        togglemode={togglemode}\n      />\n      <Alert alert={alert} />\n\n      <div className=\"container\">\n        <Form\n          heading=\"Text Editor : Enter Text to Analyze below\"\n          mode={mode}\n          showAlert={showAlert}\n        />\n        <TextVibeAbout mode={mode} />\n        <Login mode={mode} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n// import \"./App.css\";\n// import TextVibeAbout from \"./components/About\";\n// import Form from \"./components/Form\";\n// import Navbar from \"./components/Navbar\";\n// import React, { useState } from \"react\";\n// import Alert from \"./components/Alert\";\n// import Login from \"./components/Login\";\n// // import { Switch } from 'react-router-dom';\n\n\n\n// import{\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n// function App() {\n//   const [mode, setMode] = useState(\"light\");\n//   const [alert, setAlert] = useState(null);\n//   const showAlert = (message, type) => {\n//     setAlert({\n//       msg: message,\n//       type: type,\n//     });\n//     setTimeout(() => {\n//       setAlert(null);\n//     }, 3000);\n//   };\n\n//   const togglemode = () => {\n//     if (mode === \"light\") {\n//       setMode(\"dark\");\n//       document.body.style.backgroundColor = \"black\";\n//       showAlert(\"Dark mode has been Enabled\", \"success\");\n//     } else {\n//       setMode(\"light\");\n//       document.body.style.backgroundColor = \"white\";\n//       showAlert(\"light mode has been Enabled\", \"success\");\n//     }\n//   };\n\n//   return (\n//    <Router>\n// <Navbar\n//         title=\"Text Editor\"\n//         about=\"About Text Editor\"\n//         mode={mode}\n//         togglemode={togglemode}\n//       />\n\n// <Alert alert={alert} />\n\n// <Switch>\n//   <Route path=\"/\">\n//   <Form\n//           heading=\"Text Editor : Enter Text to Analyze below\"\n//           mode={mode}\n//           showAlert={showAlert}\n//         />\n//   </Route>\n\n//   <Route path=\"/about\">\n//   <TextVibeAbout mode={mode} />\n//   </Route>\n\n//   <Route path=\"/login\">\n//   <Login mode={mode} />\n//   </Route>\n\n  \n\n\n// </Switch>\n//    </Router>\n//   );\n// }\n\n// export default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}